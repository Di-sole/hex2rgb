{"version":3,"sources":["components/ColorConverter.js","components/convertHexToRgb.js","App.js","index.js"],"names":["ColorConverter","useState","hexValue","setHexValue","result","setResult","className","style","backgroundColor","onSubmit","e","preventDefault","type","maxLength","value","onChange","hex","target","length","rgb","test","r","parseInt","slice","g","b","convertHexToRgb","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kMAkCeA,MA/Bf,WAA2B,IAAD,EACOC,mBAAS,WADhB,mBAClBC,EADkB,KACRC,EADQ,OAEGF,mBAAS,cAFZ,mBAElBG,EAFkB,KAEVC,EAFU,KAqBzB,OACC,qBAAKC,UAAU,kBAAkBC,MAAO,CAACC,gBAAe,OAAEJ,QAAF,IAAEA,IAAU,UAApE,SACC,uBAAME,UAAU,iBAAiBG,SAAU,SAACC,GAAD,OAAOA,EAAEC,kBAApD,UACC,uBAAOL,UAAU,YAAYM,KAAK,OAAOC,UAAU,IAAIC,MAAOZ,EAAUa,SApBtD,SAAC,GAAc,IAC7BC,EAD4B,EAAZC,OACHH,MAOnB,GANAX,EAAYa,GAEG,MAAXA,EAAI,IACPb,EAAY,OAGTa,EAAIE,OAAS,GAAjB,CAIA,IAAMC,ECnBO,SAAyBH,GAGvC,MAFmB,oBAAoBI,KAAKJ,GAMrC,CACNK,EAAGC,SAASN,EAAIO,MAAM,EAAG,GAAI,IAC7BC,EAAGF,SAASN,EAAIO,MAAM,EAAG,GAAI,IAC7BE,EAAGH,SAASN,EAAIO,MAAM,EAAG,GAAI,KANtB,KDeKG,CAAgBV,GAC5BX,EAAUc,EAAG,cAAUA,EAAIE,EAAd,aAAoBF,EAAIK,EAAxB,aAA8BL,EAAIM,EAAlC,KAAyC,UAQpD,sBAAMnB,UAAU,aAAhB,gBAA8BF,QAA9B,IAA8BA,IAAU,+CEjB7BuB,MARf,WACE,OACE,mCACD,cAAC,EAAD,OCAHC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.5929891a.chunk.js","sourcesContent":["import { useState } from \"react\";\nimport convertHexToRgb from \"./convertHexToRgb\";\n\nfunction ColorConverter() {\n\tconst [hexValue, setHexValue] = useState(\"#000000\");\n\tconst [result, setResult] = useState(\"rgb(0,0,0)\");\n\t\n\tconst handleChange = ({target}) => {\n\t\tconst hex = target.value;\n\t\tsetHexValue(hex);\n\n\t\tif (hex[0] !== '#') {\n\t\t\tsetHexValue('#');\n\t\t}\n\n\t\tif (hex.length < 7) {\n\t\t\treturn\n\t\t}\n\t\n\t\tconst rgb = convertHexToRgb(hex);\n\t\tsetResult(rgb ? `rgb(${rgb.r}, ${rgb.g}, ${rgb.b})` : null);\n\t}\n\n\n\treturn (\n\t\t<div className=\"color-converter\" style={{backgroundColor: result ?? \"orange\"}}>\n\t\t\t<form className=\"converter-form\" onSubmit={(e) => e.preventDefault()}>\n\t\t\t\t<input className=\"hex-input\" type=\"text\" maxLength=\"7\" value={hexValue} onChange={handleChange} />\n\t\t\t\t<span className=\"rgb-result\">{result ?? \"Ошибка\"}</span>\n\t\t\t</form>\n\t\t</div>\n\t)\n}\n\nexport default ColorConverter;\n","export default function convertHexToRgb(hex) {\n\tconst isHexColor = /^#[A-Fa-f0-9]{6}$/.test(hex);\n\n\tif (!isHexColor) {\n\t\treturn null;\n\t}\n\n\treturn {\n\t\tr: parseInt(hex.slice(1, 3), 16),\n\t\tg: parseInt(hex.slice(3, 5), 16),\n\t\tb: parseInt(hex.slice(5, 7), 16)\n\t}\n}\n","import './App.css';\nimport ColorConverter from './components/ColorConverter';\n\nfunction App() {\n  return (\n    <>\n\t\t\t<ColorConverter />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}